name: My Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}

jobs:
  tagpr:
    # (1) Create a release pull request.
    # (2) If the release pull request exists, update it.
    # (3) If the release pull request is merged, create a new git tag and GitHub release.
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.ACTIONS_CI_APP_ID }}
          private-key: ${{ secrets.ACTIONS_CI_APP_PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
      - name: tagpr
        id: run-tagpr
        uses: Songmu/tagpr@3dca11e7c0d68637ee212ddd35acc3d30a7403a4 # v1.5.0
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
    outputs:
      tagpr-tag: ${{ steps.run-tagpr.outputs.tag }}
  bump_major_tag:
    # When (3) above, the if condition is satisfied.
    # Major version of git tag, such as v2, is updated.
    if: needs.tagpr.outputs.tagpr-tag != ''
    needs: tagpr
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
      - name: Git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      - name: Get major version
        run: echo "MAJOR_VERSION=$(echo ${{ needs.tagpr.outputs.tagpr-tag }} | cut -d '.' -f 1)" >> "$GITHUB_ENV"
      - name: Tag new target
        run: git tag -f ${{ env.MAJOR_VERSION }} ${{ needs.tagpr.outputs.tagpr-tag }}
      - name: Push new tag
        run: git push origin ${{ env.MAJOR_VERSION }} --force
